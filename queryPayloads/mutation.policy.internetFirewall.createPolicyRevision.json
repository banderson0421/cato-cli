{
    "operationName": "policyInternetFirewallCreatePolicyRevision",
    "query": "mutation policyInternetFirewallCreatePolicyRevision ( $PolicyCreateRevisionInput:PolicyCreateRevisionInput! $InternetFirewallPolicyMutationInput:InternetFirewallPolicyMutationInput ) { policy ( ) { internetFirewall ( input:$InternetFirewallPolicyMutationInput ) { createPolicyRevision ( input:$PolicyCreateRevisionInput ) { InternetFirewallPolicyPolicy: policy { enabled rules { PolicyElementAuditAudit: audit { updatedTime updatedBy } InternetFirewallRuleRule: rule { id name description index PolicySectionInfoSection: section { id name } enabled InternetFirewallSourceSource: source { ip HostRefHost: host { id name } SiteRefSite: site { id name } subnet IpAddressRangeIpRange: ipRange { from to } GlobalIpRangeRefGlobalIpRange: globalIpRange { id name } NetworkInterfaceRefNetworkInterface: networkInterface { id name } SiteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet { id name } FloatingSubnetRefFloatingSubnet: floatingSubnet { id name } UserRefUser: user { id name } UsersGroupRefUsersGroup: usersGroup { id name } GroupRefGroup: group { id name } SystemGroupRefSystemGroup: systemGroup { id name } } ConnectionOriginEnumConnectionOrigin: connectionOrigin CountryRefCountry: country { id name } DeviceProfileRefDevice: device { id name } OperatingSystemDeviceOS: deviceOS InternetFirewallDestinationDestination: destination { ApplicationRefApplication: application { id name } CustomApplicationRefCustomApp: customApp { id name } ApplicationCategoryRefAppCategory: appCategory { id name } CustomCategoryRefCustomCategory: customCategory { id name } SanctionedAppsCategoryRefSanctionedAppsCategory: sanctionedAppsCategory { id name } CountryRefCountry: country { id name } domain fqdn ip subnet IpAddressRangeIpRange: ipRange { from to } GlobalIpRangeRefGlobalIpRange: globalIpRange { id name } remoteAsn ContainerRefContainer: container { id name } InternetFirewallContainerContainers: containers { FqdnContainerRefFqdnContainer: fqdnContainer {  id  name } IpAddressRangeContainerRefIpAddressRangeContainer: ipAddressRangeContainer {  id  name } } } InternetFirewallServiceTypeService: service { ServiceRefStandard: standard { id name } CustomServiceCustom: custom { port PortRangePortRange: portRange {  from  to } IpProtocolProtocol: protocol } } InternetFirewallActionEnumAction: action PolicyTrackingTracking: tracking { PolicyRuleTrackingEventEvent: event { enabled } PolicyRuleTrackingAlertAlert: alert { enabled PolicyRuleTrackingFrequencyEnumFrequency: frequency SubscriptionGroupRefSubscriptionGroup: subscriptionGroup {  id  name } SubscriptionWebhookRefWebhook: webhook {  id  name } SubscriptionMailingListRefMailingList: mailingList {  id  name } } } PolicyScheduleSchedule: schedule { PolicyActiveOnEnumActiveOn: activeOn PolicyCustomTimeframeCustomTimeframe: customTimeframe { from to } PolicyCustomRecurringCustomRecurring: customRecurring { from to days } } InternetFirewallRuleExceptionExceptions: exceptions { name InternetFirewallSourceSource: source { ip HostRefHost: host {  id  name } SiteRefSite: site {  id  name } subnet IpAddressRangeIpRange: ipRange {  from  to } GlobalIpRangeRefGlobalIpRange: globalIpRange {  id  name } NetworkInterfaceRefNetworkInterface: networkInterface {  id  name } SiteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {  id  name } FloatingSubnetRefFloatingSubnet: floatingSubnet {  id  name } UserRefUser: user {  id  name } UsersGroupRefUsersGroup: usersGroup {  id  name } GroupRefGroup: group {  id  name } SystemGroupRefSystemGroup: systemGroup {  id  name } } OperatingSystemDeviceOS: deviceOS CountryRefCountry: country { id name } DeviceProfileRefDevice: device { id name } InternetFirewallDestinationDestination: destination { ApplicationRefApplication: application {  id  name } CustomApplicationRefCustomApp: customApp {  id  name } ApplicationCategoryRefAppCategory: appCategory {  id  name } CustomCategoryRefCustomCategory: customCategory {  id  name } SanctionedAppsCategoryRefSanctionedAppsCategory: sanctionedAppsCategory {  id  name } CountryRefCountry: country {  id  name } domain fqdn ip subnet IpAddressRangeIpRange: ipRange {  from  to } GlobalIpRangeRefGlobalIpRange: globalIpRange {  id  name } remoteAsn ContainerRefContainer: container {  id  name } InternetFirewallContainerContainers: containers {  FqdnContainerRefFqdnContainer: fqdnContainer { id name  } IpAddressRangeContainerRefIpAddressRangeContainer: ipAddressRangeContainer { id name  }  } } InternetFirewallServiceTypeService: service { ServiceRefStandard: standard {  id  name } CustomServiceCustom: custom {  port  PortRangePortRange: portRange { from to  } IpProtocolProtocol: protocol } } ConnectionOriginEnumConnectionOrigin: connectionOrigin } } PolicyElementPropertiesEnumProperties: properties } sections { PolicyElementAuditAudit: audit { updatedTime updatedBy } PolicySectionInfoSection: section { id name } PolicyElementPropertiesEnumProperties: properties } audit { publishedTime publishedBy } revision { id name description changes createdTime updatedTime } } PolicyMutationStatusStatus: status PolicyMutationErrorErrors: errors { errorMessage errorCode } } } } }",
    "variables": {
        "InternetFirewallPolicyMutationInput": {
            "PolicyMutationRevisionInput": {
                "id": {
                    "id": "ID"
                }
            }
        },
        "PolicyCreateRevisionInput": {
            "description": {
                "description": "String"
            },
            "name": {
                "name": "String"
            }
        }
    }
}